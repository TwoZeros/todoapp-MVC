@using Microsoft.AspNetCore.Identity
@using todoapp.Models
@using Identity.Dapper.Entities
@using todoapp.Entities

@inject SignInManager<CustomUser> SignInManager
@inject UserManager<CustomUser> UserManager


<li class="nav-header">Account</li>
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a class="nav-link " asp-controller="Manage" asp-action="Index" title="Manage"><i class="fas fa-user-circle nav-icon"></i>My profile</a>
    </li>

    <li class="nav-item">
        <form class="form-inline" asp-controller="Account" asp-action="LogOff" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button style="color:#c2c7d0; " type="submit" class="nav-link btn btn-link"><i class="fas fa-sign-out-alt nav-icon"></i>Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link"  asp-controller="Account" asp-action="Register">
            <i class="fas fa-user-plus nav-icon"></i>
            <p>Register</p>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link"  asp-controller="Account" asp-action="Login">
            <i class="fas fa-sign-in-alt nav-icon"></i>
            <p>Login</p>
        </a>
    </li>
}

